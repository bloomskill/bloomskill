{"version":3,"file":"static/js/571.3dce26ad.chunk.js","mappings":"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","sources":["components/Auth/LoginForm/LoginForm.styled.js","components/baseStyles/Button.styled.js","components/baseStyles/Form.styled.js","components/Auth/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","utils/schemas.js"],"sourcesContent":["import {\n  FormTitle,\n  FormInput,\n  StyledForm,\n} from 'components/baseStyles/Form.styled';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport styled from 'styled-components';\nimport { BtnLight } from 'components/baseStyles/Button.styled';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'components/baseStyles/CommonStyle.styled';\n\nexport const TitleLogin = styled(FormTitle)`\n  width: 100%;\n  text-align: start;\n`;\nexport const ErrorBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: -5px;\n  left: 15px;\n  margin-bottom: -16px;\n  color: #e53e3e;\n  font-family: ${theme.fonts[1]};\n  font-size: ${theme.fontSizes.small};\n  font-style: normal;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    left: 32px;\n  }\n`;\nexport const FormContainer = styled(Container)`\n  max-width: 250px;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    max-width: 540px;\n  }\n`;\nexport const FormInputLogin = styled(FormInput)`\n  min-width: 250px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    min-width: 450px;\n    margin-bottom: 35px;\n  }\n`;\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 80%;\n  transform: translateY(-80%);\n  color: ${theme.colors.grey2};\n  cursor: pointer;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    height: 50px;\n    top: 62%;\n  }\n  & svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\nexport const Btn = styled(BtnLight)`\n  font-size: 14px;\n  width: 180px;\n  height: 50px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 16px;\n    width: 217px;\n    height: 70px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 18px;\n  }\n`;\nexport const StyledLink = styled(Link)`\n  color: ${theme.colors.grey2};\n  transition: ${theme.transition[0]};\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.accent};\n  }\n`;\nexport const BoxText = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: end;\n  flex-direction: column;\n  gap: 5px;\n  margin-bottom: 16px;\n\n  & span {\n    font-family: ${theme.fonts[0]};\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    letter-spacing: 0.04em;\n    color: ${theme.colors.grey1};\n\n    @media screen and (min-width: ${theme.breakpoints.tablet}) {\n      font-size: 16px;\n    }\n\n    @media screen and (min-width: ${theme.breakpoints.desktop}) {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const FormStyled = styled(StyledForm)`\n  gap: 15px;\n  &:last-child {\n    margin-bottom: 20px;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nexport const BtnLight = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-width: 125px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  color: ${theme.colors.grey1};\n  text-transform: uppercase;\n\n  background-color: ${theme.colors.fon};\n  border: 1px solid ${theme.colors.grey1};\n  border-radius: 7px;\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 14px;\n    padding: 18px 33px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.white};\n    background-color: ${theme.colors.accent};\n    border: 1px solid ${theme.colors.accent};\n  }\n  &:disabled {\n    color: ${theme.colors.brown2};\n    background-color: ${theme.colors.grey1};\n    opacity: 0.4;\n    border: 1px solid ${theme.colors.accent};\n  }\n`;\n\nexport const BtnAccent = styled.button`\n  min-width: 220px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  color: ${theme.colors.white};\n\n  border-radius: 7px;\n  background: ${theme.colors.accent};\n  border: 1px solid ${theme.colors.accent};\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 20px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.grey2};\n    background-color: transparent;\n    border: 1px solid ${theme.colors.grey2};\n  }\n  &:disabled,\n  &[disabled]{\n  border: 1px solid #999999;\n  background-color: #cccccc;\n  color: #666666;\n}\n`;\n\nexport const BtnLink = styled(NavLink)`\n  position: relative;\n  padding: 2px;\n\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%; /* 24px */\n\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &::before,\n  &::after,\n  & span::after,\n  & span::before {\n    content: '';\n    position: absolute;\n    top: 100%;\n    bottom: 0;\n    left: -16px;\n    width: 1px;\n    background: ${theme.colors.accent};\n    transition: ${theme.transition};\n  }\n\n  &::before {\n    right: -16px;\n    left: -16px;\n    width: auto;\n    background: 0;\n    border-right: 1px solid ${theme.colors.accent};\n    border-left: 1px solid ${theme.colors.accent};\n  }\n\n  &::after {\n    right: 0;\n    left: 0;\n    height: 1px;\n    width: auto;\n  }\n\n  & span {\n    position: relative;\n    display: inline-block;\n\n    &::before,\n    &::after {\n      top: -2px;\n      left: auto;\n      right: auto;\n      width: 0;\n      height: 1px;\n      transition: ${theme.transition};\n    }\n\n    &::before {\n      left: -18px;\n    }\n\n    &::after {\n      right: -18px;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    &::before {\n      top: 0;\n    }\n    &::after {\n      right: -16px;\n      left: -16px;\n    }\n\n    & span::before,\n    & span::after {\n      width: 60%;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\nimport { FaCheck, FaTimes } from 'react-icons/fa';\nimport { BtnLight } from 'components/baseStyles/Button.styled';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { Headline } from './CommonStyle.styled';\n\nexport const FormTitle = styled(Headline)`\n  font-size: 18px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 32px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  margin: 0 auto;\n`;\n\nexport const FormList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n  align-items: stretch;\n  gap: 15px;\n\n  width: 100%;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    grid-template-columns: 1fr 1fr;\n    gap: 30px;\n  }\n`;\n\nexport const FormField = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: 15px;\n`;\n\nexport const FormLabel = styled.label`\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 16px; /* 80% */\n  letter-spacing: 1.6px;\n  text-transform: uppercase;\n  color: ${theme.colors.grey1};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 18px;\n  }\n`;\n\nexport const FormLabelBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 15px;\n\n  width: 100%;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n`;\n\nexport const FormRatio = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 5px;\n\n  width: 70%;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n`;\n\nexport const FormInputBox = styled.div`\n  display: flex;\n  gap: 8px;\n  width: 70%;\n`;\n\nexport const FormInputBoxColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 70%;\n\n  & input {\n    width: calc(100% - 42px);\n  }\n`;\n\nexport const FormInput = styled(Field)`\n  width: 100%;\n  padding: 12px;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 16px; /* 100% */\n  letter-spacing: 1.6px;\n  /* text-transform: capitalize; */\n  color: ${theme.colors.grey2};\n\n  background: ${theme.colors.white};\n  border: none;\n  border-radius: 14px;\n  transition: ${theme.transition};\n\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding: 16px;\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    max-width: 365px;\n    padding: 16px 25px;\n    font-size: 16px;\n  }\n\n  &::placeholder {\n    color: ${theme.colors.grey2};\n  }\n\n  &:hover,\n  &:focus,\n  &:focus-within {\n    &::placeholder {\n      opacity: 0;\n    }\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n\n  cursor: pointer;\n\n  & svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const Span = styled.span`\n  position: absolute;\n  left: 20px;\n  top: 13px;\n\n  font-family: ${theme.fonts[0]};\n  font-size: ${theme.fontSizes.small};\n  text-transform: uppercase;\n  pointer-events: none;\n\n  transition: ${theme.transition};\n`;\n\nexport const IconValid = styled(FaCheck)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n\n  & svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const IconInValid = styled(FaTimes)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n\n  & svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const Btn = styled(BtnLight)`\n  &:disabled {\n    opacity: 0.5;\n    cursor: auto;\n  }\n`;\n\nexport const Error = styled.span`\n  position: absolute;\n  bottom: -15px;\n  right: 0px;\n  z-index: 99;\n\n  font-family: ${theme.fonts[0]};\n  font-style: normal;\n  font-weight: 400;\n  font-size: 8px;\n  text-align: right;\n  color: ${theme.colors.red};\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport { useFormik, Formik } from 'formik';\nimport { useTranslation } from 'react-i18next';\n\nimport schemas from 'utils/schemas';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { Section, Container } from 'components/baseStyles/CommonStyle.styled';\nimport { Error, FormField, FormLabel } from 'components/baseStyles/Form.styled';\nimport { BtnLight } from 'components/baseStyles/Button.styled';\nimport {\n  TitleLogin,\n  ErrorBox,\n  FormInputLogin,\n  ShowPassword,\n  Btn,\n  StyledLink,\n  BoxText,\n  FormContainer,\n  FormStyled,\n} from './LoginForm.styled';\nimport { logIn } from '../../../redux/auth/operations';\n\nexport const LoginForm = () => {\n  const { t } = useTranslation();\n\n  const [showPass, setShowPass] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    setIsLoading(true);\n    const { email, password } = values;\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n    setIsLoading(false);\n  };\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schemas.schemasLogin,\n    onSubmit,\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    formik.values.email === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue\n      ? null\n      : isValide\n      ? `${theme.colors.red}`\n      : `${theme.colors.darkGreen}`;\n  };\n  return (\n    <Section>\n      <Container>\n        <Formik validationSchema={schemas.schemasLogin}>\n          <FormStyled onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <TitleLogin hidden>Log In</TitleLogin>\n            <FormField>\n              <FormLabel htmlFor=\"email\">\n                <span>Email</span>\n                {formik.errors.name && formik.touched.name ? (\n                  <Error>{formik.errors.name}</Error>\n                ) : null}\n              </FormLabel>\n              <FormInputLogin\n                style={{\n                  borderColor: showAccentValidateInput(\n                    formik.values.email,\n                    formik.errors.email\n                  ),\n                }}\n                name=\"email\"\n                type=\"email\"\n                // validate={schemas.schemasLogin.email}\n                onChange={formik.handleChange}\n                value={formik.values.email}\n                onBlur={formik.handleBlur}\n              />\n            </FormField>\n            <FormField>\n              <FormLabel htmlFor=\"password\">\n                <span>Password</span>\n                {formik.errors.name && formik.touched.name ? (\n                  <Error>{formik.errors.name}</Error>\n                ) : null}\n              </FormLabel>\n              <FormInputLogin\n                style={{\n                  borderColor: showAccentValidateInput(\n                    formik.values.password,\n                    formik.errors.password\n                  ),\n                }}\n                name=\"password\"\n                type={showPass ? 'text' : 'password'}\n                onChange={formik.handleChange}\n                value={formik.values.password}\n                onBlur={formik.handleBlur}\n              />\n              <ShowPassword onClick={showPassword}>\n                {!showPass ? <ImEyeBlocked /> : <ImEye />}\n              </ShowPassword>\n              {formik.errors.password && formik.touched.password ? (\n                <ErrorBox>{formik.errors.password}</ErrorBox>\n              ) : null}\n            </FormField>\n            <FormContainer>\n              <BoxText>\n                <StyledLink to=\"/forgot_password\">Forgot password?</StyledLink>\n              </BoxText>\n              <BtnLight\n                type=\"submit\"\n                disabled={isValid}\n                aria-label=\"submit log in\"\n              >\n                {isLoading ? 'Loading' : 'Log In'}\n              </BtnLight>\n            </FormContainer>\n          </FormStyled>\n        </Formik>\n      </Container>\n    </Section>\n  );\n};\n\nexport default LoginForm;\n","import { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport LoginForm from 'components/Auth/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Login\" description=\"\" />\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LoginPage;\n","import * as Yup from \"yup\";\n\n// ----- USERS -----//\nconst phoneRegExp = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nconst registerSchema = Yup.object().shape({\n  name: Yup.string().required(\"Require field\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Require field\"),\n  phone: Yup.number().nullable(true).required(\"Require field\"),\n});\n\nconst schemasLogin = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Require\"),\n  password: Yup.string()\n    .min(4, \"Password too short (min 4)\")\n    .max(32, \"Password too long (max 32)\")\n    .matches(/^\\s*\\S+\\s*$/, \"Password must be without spaces\")\n    .required(\"Require\"),\n});\n\nconst changePasswordSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Require field\"),\n});\n\nconst updateUserSchema = Yup.object().shape({\n  name: Yup.string().required(\"Require field\"),\n  surname: Yup.string(),\n  email: Yup.string().email(\"Invalid email\").required(\"Require field\"),\n  phone: Yup.number(),\n  // .nullable(true)\n  // .required(\"Require field\")\n  // .matches(phoneRegExp, \"Phone number is not valid\"),\n  avatar: Yup.string(),\n  favorites: Yup.array(),\n  events: Yup.array(),\n  role: Yup.string(),\n});\n\nconst createUserSchema = Yup.object().shape({\n  name: Yup.string().required(\"Require field\"),\n  surname: Yup.string(),\n  email: Yup.string().email(\"Invalid email\").required(\"Require field\"),\n  password: Yup.string(),\n  // .min(7, \"Password too short (min 7)\")\n  // .max(32, \"Password too long (max 32)\")\n  // .matches(/^\\s*\\S+\\s*$/, \"Password must be without spaces\")\n  // .required(\"Require field\"),\n  phone: Yup.number(),\n  // .nullable(true)\n  // .required(\"Require field\")\n  // .matches(phoneRegExp, \"Phone number is not valid\"),\n  avatar: Yup.string(),\n  favorites: Yup.array(),\n  events: Yup.array(),\n  role: Yup.string(),\n});\n\nconst updatePasswordSchema = Yup.object().shape({\n  password: Yup.string(),\n  // .min(7, \"Password too short (min 7)\")\n  // .max(32, \"Password too long (max 32)\")\n  // .matches(/^\\s*\\S+\\s*$/, \"Password must be without spaces\")\n  // .required(\"Require field\"),\n  confirmPassword: Yup.string(),\n  // .oneOf([Yup.ref(\"password\")], \"Your passwords do not match\")\n  // .required(\"Require field\"),\n});\n\n// ----- EVENTS -----//\n// const schemasEvents = Yup.object().shape({\n//   article_event: Yup.string(),\n//   date: Yup.date().required(\"Require field\"),\n//   time: Yup.string().required(\"Require field\"),\n//   image: Yup.string().required(\"Require field\"),\n//   duration: Yup.string().required(\"Require field\"),\n//   price: Yup.string().required(\"Require field\"),\n//   seats: Yup.number().nullable(true).required(\"Require field\"),\n//   booking: Yup.number().nullable(true),\n//   vacancies: Yup.number().nullable(true),\n\n//   nameFr: Yup.string().required(\"Require field\"),\n//   locationFr: Yup.string().required(\"Require field\"),\n//   adressFr: Yup.string().required(\"Require field\"),\n//   descriptionFr: Yup.string().required(\"Require field\"),\n//   categoryFr: Yup.string().required(\"Require field\"),\n\n//   nameUa: Yup.string().required(\"Require field\"),\n//   locationUa: Yup.string().required(\"Require field\"),\n//   adressUa: Yup.string().required(\"Require field\"),\n//   descriptionUa: Yup.string().required(\"Require field\"),\n//   categoryUa: Yup.string().required(\"Require field\"),\n\n//   nameRu: Yup.string().required(\"Require field\"),\n//   locationRu: Yup.string().required(\"Require field\"),\n//   adressRu: Yup.string().required(\"Require field\"),\n//   descriptionRu: Yup.string().required(\"Require field\"),\n//   categoryRu: Yup.string().required(\"Require field\"),\n// });\n\n// ----- Team -----//\n// const schemasTeam = Yup.object().shape({\n//   email: Yup.string().email(\"Invalid email\").required(\"Require field\"),\n//   phone: Yup.number()\n//     .nullable(true)\n//     .required(\"Require field\")\n//     .matches(phoneRegExp, \"Phone number is not valid\"),\n//   rating: Yup.number().nullable(true),\n//   image: Yup.string().required(\"Require field\"),\n//   status: Yup.string().required(\"Require field\"),\n\n//   nameFr: Yup.string().required(\"Require field\"),\n//   descriptionFr: Yup.string().required(\"Require field\"),\n\n//   nameUa: Yup.string().required(\"Require field\"),\n//   descriptionUa: Yup.string().required(\"Require field\"),\n\n//   nameRu: Yup.string().required(\"Require field\"),\n//   descriptionRu: Yup.string().required(\"Require field\"),\n// });\n\nconst schemas = {\n  registerSchema,\n  schemasLogin,\n  changePasswordSchema,\n  updateUserSchema,\n  createUserSchema,\n  updatePasswordSchema,\n  // schemasEvents,\n  // schemasTeam,\n};\n\nexport default schemas;\n"],"names":["TitleLogin","styled","FormTitle","_templateObject","_taggedTemplateLiteral","ErrorBox","_templateObject2","theme","FormContainer","Container","_templateObject3","FormInputLogin","FormInput","_templateObject4","ShowPassword","_templateObject5","StyledLink","BtnLight","_templateObject6","Link","_templateObject7","BoxText","_templateObject8","FormStyled","StyledForm","_templateObject9","BtnAccent","BtnLink","NavLink","Headline","Form","FormField","FormLabel","Field","_templateObject10","Error","_templateObject11","_templateObject12","FaCheck","_templateObject13","FaTimes","_templateObject14","_templateObject15","_templateObject16","LoginForm","t","useTranslation","showPass","setShowPass","useState","isLoading","setIsLoading","dispatch","useDispatch","formik","useFormik","initialValues","email","password","validationSchema","schemas","onSubmit","values","logIn","isValid","errors","touched","showAccentValidateInput","hasValue","isValide","concat","_jsx","Section","children","Formik","_jsxs","handleSubmit","autoComplete","hidden","htmlFor","name","style","borderColor","type","onChange","handleChange","value","onBlur","handleBlur","onClick","showPassword","ImEye","ImEyeBlocked","to","disabled","LoginPage","useEffect","window","scrollTo","top","left","behavior","_Fragment","SEO","title","description","registerSchema","Yup","shape","required","phone","nullable","schemasLogin","min","max","matches","changePasswordSchema","updateUserSchema","surname","avatar","favorites","events","role","createUserSchema","updatePasswordSchema","confirmPassword"],"sourceRoot":""}