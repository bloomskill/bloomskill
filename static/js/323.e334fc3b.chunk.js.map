{"version":3,"file":"static/js/323.e334fc3b.chunk.js","mappings":"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","sources":["components/Team/Team.styled.js","components/baseStyles/Button.styled.js","components/Team/Team.jsx","pages/TeamPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nexport const TeamList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 30px;\n\n  margin-top: 30px;\n  margin-bottom: 50px;\n  padding: 0 15px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet_only}) {\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    flex-direction: row;\n    align-items: stretch;\n\n    padding: 0;\n    margin-top: 70px;\n    margin-bottom: 100px;\n  }\n`;\n\nexport const TeamListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n  }\n`;\n\nexport const ImgBox = styled.div`\n  width: 221px;\n  height: 221px;\n  border-radius: 110.5px;\n  overflow: hidden;\n`;\n\nexport const ItemImg = styled.img`\n  width: 221px;\n  height: 221px;\n\n  transition: ${theme.transition};\n\n  &:hover,\n  &:focus {\n    transform: ${theme.scale};\n  }\n`;\n\nexport const DetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 10px;\n\n  text-align: center;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 250px;\n  }\n`;\n\nexport const Name = styled.span`\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[0]};\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 120%; /* 28.8px */\n  text-transform: capitalize;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 24px;\n  }\n`;\n\nexport const Describe = styled.p`\n  color: ${theme.grey2};\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px; /* 150% */\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n`;\n\nexport const BtnMore = styled.button`\n  position: relative;\n  display: block;\n\n  margin: 0 auto;\n  padding: 9px 40px;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 30px; /* 150% */\n  text-transform: capitalize;\n  color: ${theme.colors.grey2};\n\n  background-color: transparent;\n  border-radius: 7px;\n  border: 1px solid ${theme.colors.grey2};\n\n  transition: ${theme.transition};\n  cursor: pointer;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 20px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.white};\n    background-color: ${theme.colors.accent};\n    border: 1px solid ${theme.colors.accent};\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nexport const BtnLight = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-width: 125px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  color: ${theme.colors.grey1};\n  text-transform: uppercase;\n\n  background-color: ${theme.colors.fon};\n  border: 1px solid ${theme.colors.grey1};\n  border-radius: 7px;\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 14px;\n    padding: 18px 33px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.white};\n    background-color: ${theme.colors.accent};\n    border: 1px solid ${theme.colors.accent};\n  }\n  &:disabled {\n    color: ${theme.colors.brown2};\n    background-color: ${theme.colors.grey1};\n    opacity: 0.4;\n    border: 1px solid ${theme.colors.accent};\n  }\n`;\n\nexport const BtnAccent = styled.button`\n  min-width: 220px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  color: ${theme.colors.white};\n\n  border-radius: 7px;\n  background: ${theme.colors.accent};\n  border: 1px solid ${theme.colors.accent};\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 20px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.grey2};\n    background-color: transparent;\n    border: 1px solid ${theme.colors.grey2};\n  }\n  &:disabled,\n  &[disabled]{\n  border: 1px solid #999999;\n  background-color: #cccccc;\n  color: #666666;\n}\n`;\n\nexport const BtnLink = styled(NavLink)`\n  position: relative;\n  padding: 2px;\n\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%; /* 24px */\n\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &::before,\n  &::after,\n  & span::after,\n  & span::before {\n    content: '';\n    position: absolute;\n    top: 100%;\n    bottom: 0;\n    left: -16px;\n    width: 1px;\n    background: ${theme.colors.accent};\n    transition: ${theme.transition};\n  }\n\n  &::before {\n    right: -16px;\n    left: -16px;\n    width: auto;\n    background: 0;\n    border-right: 1px solid ${theme.colors.accent};\n    border-left: 1px solid ${theme.colors.accent};\n  }\n\n  &::after {\n    right: 0;\n    left: 0;\n    height: 1px;\n    width: auto;\n  }\n\n  & span {\n    position: relative;\n    display: inline-block;\n\n    &::before,\n    &::after {\n      top: -2px;\n      left: auto;\n      right: auto;\n      width: 0;\n      height: 1px;\n      transition: ${theme.transition};\n    }\n\n    &::before {\n      left: -18px;\n    }\n\n    &::after {\n      right: -18px;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    &::before {\n      top: 0;\n    }\n    &::after {\n      right: -16px;\n      left: -16px;\n    }\n\n    & span::before,\n    & span::after {\n      width: 60%;\n    }\n  }\n`;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { fetchData } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'helpers/Loader/Loader';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\nimport { BASE_URL_AVATAR } from 'helpers/constants';\nimport defaultImg from 'images/defaultUserPhoto.jpg';\nimport {\n  Container,\n  Section,\n  Title,\n} from 'components/baseStyles/CommonStyle.styled';\nimport { BtnLink } from 'components/baseStyles/Button.styled';\nimport {\n  BtnMore,\n  Describe,\n  DetailsWrapper,\n  ImgBox,\n  ItemImg,\n  Name,\n  TeamList,\n  TeamListItem,\n} from './Team.styled';\n\nexport const Team = () => {\n  const [specialists, setSpecialists] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { selectedLanguage } = useContext(StatusContext);\n  const { t } = useTranslation();\n\n  const [limit, setLimit] = useState(8);\n  const end = count => {\n    setLimit(prevState => prevState + count);\n  };\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/specialists`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n        let langData = [];\n        data\n          .filter(item => item.status === 'active')\n          .map(it => {\n            let item = [\n              {\n                _id: it._id,\n                specialistId: it.specialistId,\n                status: it.status,\n                phone: it.phone,\n                email: it.email,\n                ...it[selectedLanguage],\n                rating: it.rating,\n                image: it.image,\n              },\n            ];\n            langData.push(item[0]);\n          });\n        setSpecialists(langData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  return (\n    <Section>\n      <Container>\n        <Title>{t('Nos experts')}</Title>\n        {isLoading ? onLoading() : onLoaded()}\n        {error && onFetchError(t('Whoops, something went wrong'))}\n        {specialists.length > 0 && !error && (\n          <TeamList>\n            {specialists\n              .sort((a, b) => {\n                const nameA = a.name.toUpperCase();\n                const nameB = b.name.toUpperCase();\n                if (nameA < nameB) {\n                  return -1;\n                }\n                if (nameA > nameB) {\n                  return 1;\n                }\n                return 0;\n              })\n              .slice(0, limit)\n              .map(specialist => {\n                return (\n                  <TeamListItem key={specialist.specialistId}>\n                    <ImgBox>\n                      <ItemImg\n                        src={\n                          specialist.image\n                            ? BASE_URL_AVATAR +\n                              specialist.image.split('/')[\n                                specialist.image.split('/').length - 1\n                              ]\n                            : defaultImg\n                        }\n                        alt={specialist.name}\n                        width=\"221\"\n                        height=\"221\"\n                        loading=\"lazy\"\n                      ></ItemImg>\n                    </ImgBox>\n                    <DetailsWrapper>\n                      <Name>{specialist.name}</Name>\n                      <Describe>\n                      {specialist.description.split('|&|').join(' ').length > 100 ? specialist.description.split('|&|').join(' ').slice(0, 100) + ' ...' : specialist.description.split('|&|').join(' ')}\n                      </Describe>\n                      <BtnLink to={`/specialists/${specialist.specialistId}`}>\n                        <span>{t('Suivant')}</span>\n                      </BtnLink>\n                    </DetailsWrapper>\n                  </TeamListItem>\n                );\n              })}\n          </TeamList>\n        )}\n        {specialists.length > limit && (\n          <BtnMore\n            type=\"button\"\n            aria-label=\"More specialists\"\n            onClick={() => end(8)}\n          >\n            <span>{t('Voir plus')}</span>\n          </BtnMore>\n        )}\n      </Container>\n    </Section>\n  );\n};\n","import { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { Team } from 'components/Team/Team';\n\nconst TeamPage = () => {\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n  return (\n    <>\n      <SEO title=\"Team\" description=\"The team of specialists\" />\n      <Team />\n    </>\n  );\n};\n\nexport default TeamPage;\n"],"names":["TeamList","styled","_templateObject","_taggedTemplateLiteral","theme","TeamListItem","_templateObject2","ImgBox","_templateObject3","ItemImg","_templateObject4","DetailsWrapper","_templateObject5","Name","_templateObject6","Describe","_templateObject7","BtnMore","_templateObject8","BtnLight","BtnAccent","BtnLink","NavLink","Team","specialists","setSpecialists","useState","error","setError","isLoading","setIsLoading","selectedLanguage","useContext","StatusContext","t","useTranslation","limit","setLimit","useEffect","data","fetchData","onFetchError","langData","filter","item","status","map","it","_id","specialistId","phone","email","rating","image","push","_jsx","Section","children","_jsxs","Container","Title","onLoading","onLoaded","length","sort","a","b","nameA","name","toUpperCase","nameB","slice","specialist","src","BASE_URL_AVATAR","split","defaultImg","alt","width","height","loading","description","join","to","concat","type","onClick","end","count","prevState","TeamPage","window","scrollTo","top","left","behavior","_Fragment","SEO","title"],"sourceRoot":""}