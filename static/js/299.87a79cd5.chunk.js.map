{"version":3,"file":"static/js/299.87a79cd5.chunk.js","mappings":"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","sources":["components/FormMessage/FormMessage.styled.js","components/FormMessage/FormMessage.jsx","components/Home/TopEvents/TopEvents.styled.js","components/Home/TopSpecialists/TopSpecialists.styled.js","components/baseStyles/Button.styled.js","helpers/BackLink/BackLink.styled.js","helpers/BackLink/BackLink.jsx","components/Specialist/Specialist.styled.js","components/Specialist/Specialist.jsx","pages/SpecialistPage.jsx"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { BtnAccent } from 'components/baseStyles/Button.styled';\n\nexport const FormList = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    gap: 45px;\n    padding: 0 70px;\n  }\n`;\n\nexport const FieldsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* gap: 20px; */\n  width: 100%;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    display: grid;\n    align-items: center;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 20px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    grid-gap: 70px;\n  }\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    width: 100%;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  height: 100%;\n`;\n\nexport const FormName = styled.span`\n  margin-bottom: 15px;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  color: ${theme.colors.grey1};\n`;\n\nexport const FormInput = styled(Field)`\n  width: 100%;\n  padding: 15px;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  color: ${theme.colors.grey2};\n\n  background: ${theme.colors.white};\n  border-color: transparent;\n  border: 1px solid ${theme.colors.grey2};\n  border-radius: 10px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    max-width: 530px;\n    padding: 25px 30px;\n  }\n\n  &:focus-visible {\n    border: 0.5px solid ${theme.colors.accent};\n    outline: none;\n  }\n\n  &::placeholder {\n    color: ${theme.colors.grey2};\n    font-family: ${theme.fonts[0]};\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n\n  &:focus::placeholder {\n    color: transparent;\n  }\n`;\n\nexport const Error = styled.span`\n  position: absolute;\n  bottom: -15px;\n  right: 0;\n  z-index: 2;\n\n  font-family: ${theme.fonts[0]};\n  font-style: normal;\n  font-weight: 400;\n  font-size: 8px;\n  text-align: right;\n  color: ${theme.colors.red};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 12px;\n  }\n`;\n\nexport const FormBtn = styled(BtnAccent)`\n  /* margin-top: 30px;\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    margin-top: 0;\n  } */\n`;\n\nexport const LableBoxMes = styled.div`\n  margin-bottom: 20px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const FormInputMessage = styled.textarea`\n  width: 100%;\n  /* height: 158px; */\n  padding: 15px;\n  resize: none;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  color: ${theme.colors.grey2};\n\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.grey2};\n  border-radius: 10px;\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n\n  @supports (-webkit-touch-callout: none) and (not (translate: none)) {\n    &:last-child {\n      margin-bottom: 20px;\n    }\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    height: 100%;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    max-width: 530px;\n    padding: 25px 30px;\n  }\n\n  &:focus-visible {\n    border: 0.5px solid ${theme.colors.accent};\n    outline: none;\n  }\n\n  &::placeholder {\n    color: ${theme.colors.grey2};\n    font-family: ${theme.fonts[0]};\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { createData } from 'services/APIservice';\nimport { addMessages } from '../../redux/messages/operation';\nimport {\n  Error,\n  FieldsWrapper,\n  FormBtn,\n  FormInput,\n  FormInputMessage,\n  FormLabel,\n  FormList,\n  FormName,\n  LableBoxMes,\n} from './FormMessage.styled';\n\nexport const FormMessage = ({ specialist }) => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  async function createMessage(values) {\n    setIsLoading(true);\n    try {\n      const { data } = await createData(`/messages`, values);\n      dispatch(addMessages({ ...data }));\n      if (!data) {\n        return onFetchError('Whoops, something went wrong');\n      }\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const MessageSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!')\n      .required('Required'),\n    email: Yup.string().email('Invalid email').required('Required'),\n    message: Yup.string().required('Required'),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        message: '',\n        specialistId: specialist?.specialistId ? specialist.specialistId : '',\n      }}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        createMessage(values);\n        setSubmitting(false);\n        resetForm();\n      }}\n      enableReinitialize={true}\n      validationSchema={MessageSchema}\n    >\n      {({\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        resetForm,\n        isSubmitting,\n        values,\n        errors,\n        touched,\n      }) => (\n        <FormList\n          autoComplete=\"off\"\n          onSubmit={handleSubmit}\n          onChange={handleChange}\n        >\n          <FieldsWrapper>\n            <LableBoxMes>\n              <FormLabel htmlFor=\"name\">\n                <FormName>{t('Le nom')}</FormName>\n                <FormInput\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  // placeholder={specialist?.name ? specialist.name : 'Olga'}\n                  placeholder={t('Le nom')}\n                  value={values.name}\n                  required\n                />\n                {errors.name && touched.name ? (\n                  <Error>{errors.name}</Error>\n                ) : null}\n              </FormLabel>\n              <FormLabel htmlFor=\"email\">\n                <FormName>{t('E-mail')}</FormName>\n                <FormInput\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"test@gmail.com\"\n                  value={values.email}\n                  required\n                />\n                {errors.email && touched.email ? (\n                  <Error>{errors.email}</Error>\n                ) : null}\n              </FormLabel>\n            </LableBoxMes>\n            <FormLabel htmlFor=\"message\">\n              <FormName>{t('Message')}</FormName>\n              <FormInputMessage\n                type=\"text\"\n                name=\"message\"\n                id=\"message\"\n                placeholder={t(\n                  'Bonjour, Je voudrais poser une question sur...'\n                )}\n                value={values.message}\n                required\n                rows=\"6\"\n                cols=\"25\"\n                onChange={e => {\n                  setFieldValue('message', e.target.value);\n                }}\n              />\n              {errors.state && touched.state ? (\n                <Error>{errors.state}</Error>\n              ) : null}\n            </FormLabel>\n          </FieldsWrapper>\n          <FormBtn type=\"submit\" disabled={isSubmitting} aria-label=\"Submit\">\n            {t('Envoyer')}\n          </FormBtn>\n        </FormList>\n      )}\n    </Formik>\n  );\n};\n\nFormMessage.propTypes = {\n  specialist: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    specialistId: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n    status: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    description: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n","import { NavLink } from \"react-router-dom\";\nimport styled, { keyframes } from \"styled-components\";\nimport { theme } from \"components/baseStyles/Variables.styled\";\nimport { Section } from \"components/baseStyles/CommonStyle.styled\";\n\nconst fadeInUp = keyframes`\n  from {\n    opacity: 0;\n    transform: translate(-50%, -50%);\n  }\n  to {\n    opacity: 1;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const EventsSection = styled(Section)`\n  padding-bottom: 75px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding-bottom: 120px;\n  }\n`;\n\nexport const BtnLinkText = styled(NavLink)`\n  display: block;\n  margin-bottom: 20px;\n  padding-bottom: 2px;\n  text-align: end;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%; /* 24px */\n  color: ${theme.colors.grey2};\n\n  /* text-decoration: none; */\n  transition: ${theme.transition};\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.accent};\n  }\n`;\n\nexport const EventList = styled.ul`\n  display: none;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n  }\n`;\n\nexport const EventListItem = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\nexport const EventImgContainer = styled.div`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const ViewportBox = styled.div`\n  display: ${(props) => (props.$mobile ? \"block\" : \"none\")};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    display: ${(props) => (props.$mobile ? \"none\" : \"block\")};\n  }\n`;\n\nexport const ItemImg = styled.img`\n  width: 350px;\n  height: 300px;\n  object-fit: cover;\n  /* border-radius: 40px; */\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 402px;\n    height: 366px;\n    object-fit: cover;\n  }\n`;\n\nexport const DetailsWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  width: 280px;\n  height: 280px;\n  padding: 40px 20px;\n\n  border-radius: 40px;\n  background: ${theme.colors.fon};\n\n  animation: ${fadeInUp} 0.3s ease;\n`;\n\nexport const Name = styled.span`\n  font-family: ${theme.fonts[1]};\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 120%; /* 24px */\n  color: ${theme.colors.grey1};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 24px;\n  }\n`;\n\nexport const DateTimeWrapper = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n\n  & li {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 5px;\n  }\n`;\n\nexport const Head = styled.span`\n  font-family: ${theme.fonts[0]};\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 12.02px; /* 80.133% */\n  text-transform: uppercase;\n  text-align: center;\n  color: ${theme.colors.grey2};\n`;\n\nexport const DateTime = styled.span`\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 34px; /* 212.5% */\n  text-transform: uppercase;\n  text-align: center;\n  color: ${theme.colors.grey1};\n`;\n\nexport const Describe = styled.p`\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 150%; /* 24px */\n  color: ${theme.colors.grey2};\n  text-align: center;\n`;\n","import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nexport const Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n\n  margin-top: 25px;\n`;\n\nexport const BtnPagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 48px;\n  height: 48px;\n  flex-shrink: 0;\n\n  color: ${theme.colors.primary};\n  background-color: ${theme.colors.white};\n  border-radius: 50%;\n  filter: drop-shadow(0px 4px 14px rgba(0, 0, 0, 0.16));\n\n  cursor: pointer;\n  transition: ${theme.transition};\n  user-select: none;\n\n  &:hover,\n  &:focus {\n    filter: drop-shadow(0px 4px 14px rgba(0, 0, 0, 0.3));\n  }\n`;\n\nexport const TeamListItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n  }\n`;","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nexport const BtnLight = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-width: 125px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  color: ${theme.colors.grey1};\n  text-transform: uppercase;\n\n  background-color: ${theme.colors.fon};\n  border: 1px solid ${theme.colors.grey1};\n  border-radius: 7px;\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 14px;\n    padding: 18px 33px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.white};\n    background-color: ${theme.colors.accent};\n    border: 1px solid ${theme.colors.accent};\n  }\n  &:disabled {\n    color: ${theme.colors.brown2};\n    background-color: ${theme.colors.grey1};\n    opacity: 0.4;\n    border: 1px solid ${theme.colors.accent};\n  }\n`;\n\nexport const BtnAccent = styled.button`\n  min-width: 220px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  color: ${theme.colors.white};\n\n  border-radius: 7px;\n  background: ${theme.colors.accent};\n  border: 1px solid ${theme.colors.accent};\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 20px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.grey2};\n    background-color: transparent;\n    border: 1px solid ${theme.colors.grey2};\n  }\n  &:disabled,\n  &[disabled]{\n  border: 1px solid #999999;\n  background-color: #cccccc;\n  color: #666666;\n}\n`;\n\nexport const BtnLink = styled(NavLink)`\n  position: relative;\n  padding: 2px;\n\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%; /* 24px */\n\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &::before,\n  &::after,\n  & span::after,\n  & span::before {\n    content: '';\n    position: absolute;\n    top: 100%;\n    bottom: 0;\n    left: -16px;\n    width: 1px;\n    background: ${theme.colors.accent};\n    transition: ${theme.transition};\n  }\n\n  &::before {\n    right: -16px;\n    left: -16px;\n    width: auto;\n    background: 0;\n    border-right: 1px solid ${theme.colors.accent};\n    border-left: 1px solid ${theme.colors.accent};\n  }\n\n  &::after {\n    right: 0;\n    left: 0;\n    height: 1px;\n    width: auto;\n  }\n\n  & span {\n    position: relative;\n    display: inline-block;\n\n    &::before,\n    &::after {\n      top: -2px;\n      left: auto;\n      right: auto;\n      width: 0;\n      height: 1px;\n      transition: ${theme.transition};\n    }\n\n    &::before {\n      left: -18px;\n    }\n\n    &::after {\n      right: -18px;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    &::before {\n      top: 0;\n    }\n    &::after {\n      right: -16px;\n      left: -16px;\n    }\n\n    & span::before,\n    & span::after {\n      width: 60%;\n    }\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nconst GoBack = styled(Link)`\n  all: unset;\n\n  display: inline-flex;\n  align-items: center;\n  gap: 5px;\n\n  margin-right: auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: italic;\n  font-weight: 400;\n  line-height: normal;\n  text-transform: capitalize;\n  color: ${theme.colors.grey2};\n\n  background-color: transparent;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.accent};\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 24px;\n  }\n`;\n\nexport { GoBack };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { GoBack } from './BackLink.styled';\n\nexport const BackButton = ({ to, children }) => {\n  return (\n    <GoBack to={to}>\n      <HiArrowLeft size={16} />\n      {children}\n    </GoBack>\n  );\n};\nBackButton.propTypes = {\n  to: PropTypes.string,\n  children: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { Section } from 'components/baseStyles/CommonStyle.styled';\nimport { ViewportBox } from 'components/Home/TopEvents/TopEvents.styled';\n\nexport const DescriptionSection = styled(Section)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    gap: 20px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    gap: 35px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 216px;\n  height: 216px;\n  /* border-radius: 8px; */\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 403px;\n    height: 403px;\n  }\n`;\n\nexport const EventsSection = styled(Section)`\n  padding-top: 0;\n`;\n\nexport const SViewportBox = styled(ViewportBox)`\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    & .swiper-wrapper {\n      justify-content: center !important;\n    }\n  }\n`;\n\nexport const MessageSection = styled(Section)`\n  padding-top: 0;\n  padding-bottom: 75px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding-bottom: 120px;\n  }\n`;\nexport const DescriptionWrapper = styled.div`\ndisplay: flex;\nflex-direction:column;\njustify-content: start ;\nalign-items:start;\ngap:4px;\n`;","import PropTypes from 'prop-types';\nimport { useEffect, useState, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from 'react-icons/md';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Navigation, Mousewheel, Keyboard, Autoplay } from 'swiper/modules';\nimport 'swiper/css';\nimport { fetchData } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'helpers/Loader/Loader';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\nimport { FormMessage } from 'components/FormMessage/FormMessage';\nimport { BackButton } from 'helpers/BackLink/BackLink';\nimport { BASE_URL_AVATAR, BASE_URL_IMG } from 'helpers/constants';\nimport defaultImg from 'images/defaultUserPhoto.jpg';\nimport {\n  Container,\n  Headline,\n  Subtitle,\n  Title,\n} from 'components/baseStyles/CommonStyle.styled';\nimport { BtnLink } from 'components/baseStyles/Button.styled';\nimport {\n  DescriptionSection,\n  DescriptionWrapper,\n  EventsSection,\n  Image,\n  MessageSection,\n  SViewportBox,\n} from './Specialist.styled';\nimport {\n  DateTime,\n  DateTimeWrapper,\n  Describe,\n  DetailsWrapper,\n  EventList,\n  EventListItem,\n  Head,\n  ItemImg,\n  Name,\n  ViewportBox,\n} from 'components/Home/TopEvents/TopEvents.styled';\nimport {\n  BtnPagination,\n  Pagination,\n} from 'components/Home/TopSpecialists/TopSpecialists.styled';\n\nexport const Specialist = ({ specialist }) => {\n  const { specialistId, image, description, name } = specialist;\n  const descriptionArray = description.split('|&|');\n  const [events, setEvents] = useState([]);\n  const [activeEvents, setActiveEvents] = useState([]);\n  const [specialistEvents, setSpecialistEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { selectedLanguage } = useContext(StatusContext);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/events`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n        let langData = [];\n        data\n          .filter(item => item.specialistId === specialistId)\n          .map(event => {\n            let item = [\n              {\n                _id: event._id,\n                article_event: event.article_event,\n                language: event.language,\n                image: event.image,\n                image_1: event.image_1,\n                image_2: event.image_2,\n                rating: event.rating,\n                duration: event.duration,\n                category: event.category,\n                specialistId: event.specialistId,\n                ...event[selectedLanguage],\n              },\n            ];\n            langData.push(item[0]);\n          });\n        setEvents(langData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/active_events`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n        setActiveEvents(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  useEffect(() => {\n    let array = [];\n    activeEvents.map(it => {\n      events.map(item => {\n        if (it.eventId === item.article_event) {\n          let data = {};\n          (data._id = it._id),\n            (data.article_event = item.article_event),\n            (data.language = it.language),\n            (data.language_secondary = it.language_secondary),\n            (data.language_third = it.language_third),\n            (data.price = it.price),\n            (data.date = it.date),\n            (data.time = it.time),\n            (data.location = it.location),\n            (data.address = it.address),\n            (data.status = it.status),\n            (data.seats = it.seats),\n            (data.booking = it.booking),\n            (data.vacancies = it.vacancies),\n            (data.image = item.image),\n            (data.image_1 = item.image_1),\n            (data.image_2 = item.image_2),\n            (data.rating = item.rating),\n            (data.duration = item.duration),\n            (data.category = item.category),\n            (data.specialistId = item.specialistId),\n            (data.description = item.description),\n            (data.name = item.name),\n            array.push(data);\n        }\n      });\n    });\n    setSpecialistEvents(array);\n  }, [activeEvents, events]);\n\n  const firstName = name => {\n    let firstWord = name.indexOf(' ');\n    if (firstWord == -1) {\n      return name;\n    }\n    return name.slice(0, firstWord);\n  };\n\n  const [isHovered, setHovered] = useState(null);\n\n  const handleMouseEnter = i => {\n    setHovered(i);\n  };\n\n  const handleMouseLeave = () => {\n    setHovered(null);\n  };\n\n  return (\n    <Container>\n      <DescriptionSection>\n        <BackButton to=\"/specialists\">{t('Retour')}</BackButton>\n        <Image\n          src={\n            image\n              ? BASE_URL_AVATAR +\n                image.split('/')[image.split('/').length - 1]\n              : defaultImg\n          }\n          alt={name}\n          width=\"182\"\n          height=\"216\"\n          loading=\"lazy\"\n        ></Image>\n        <Headline\n          data-aos=\"fade-right\"\n          // data-aos=\"zoom-in\"\n          data-aos-easing=\"linear\"\n          data-aos-duration=\"1000\"\n        >\n          {name}\n        </Headline>\n    <DescriptionWrapper>\n    {descriptionArray && descriptionArray.map(it=><Subtitle key={it} style={{ textAlign: 'justify', textIndent: \"60px\" }} data-aos=\"fade-left\" data-aos-easing=\"linear\" data-aos-duration=\"1000\">{it}</Subtitle>)}\n    </DescriptionWrapper>\n      </DescriptionSection>\n      <EventsSection>\n        <Title>\n          {t(\"Evénements d'expert à venir\")} \n          {/* {firstName(name)} */}\n        </Title>\n        {isLoading ? onLoading() : onLoaded()}\n        {error && onFetchError(t('Whoops, something went wrong'))}\n        {specialistEvents.filter(event => event.status === 'active').length ===\n          0 &&\n          !error && (\n            <Subtitle>\n              {t(\n                \"Nous sommes désolés, l'expert ne fait pas les ateliers ces prochains jours\"\n              )}\n            </Subtitle>\n          )}\n        {specialistEvents.filter(event => event.status === 'active').length >\n          0 &&\n          specialistEvents.filter(event => event.status === 'active').length <=\n            3 &&\n          !error && (\n            <>\n              <EventList>\n                {specialistEvents\n                  .filter(event => event.status === 'active')\n                  .sort((a, b) => new Date(b.date) - new Date(a.date))\n                  .slice(0, 5)\n                  .sort((a, b) => new Date(a.date) - new Date(b.date))\n                  .map((event, i) => {\n                    return (\n                      <EventListItem\n                        key={i}\n                        onMouseEnter={() => handleMouseEnter(i)}\n                        onMouseLeave={handleMouseLeave}\n                        onTouchStart={() => handleMouseEnter(i)}\n                        // onTouchEnd={handleMouseLeave}\n                      >\n                        <ItemImg\n                          key={event._id}\n                          src={\n                            event.image\n                              ? BASE_URL_IMG +\n                                event.image.split('/')[\n                                  event.image.split('/').length - 1\n                                ]\n                              : defaultImg\n                          }\n                          alt={event.name}\n                          width=\"402\"\n                          height=\"366\"\n                          loading=\"lazy\"\n                        />\n                        {isHovered === i && (\n                          <DetailsWrapper>\n                            <Name>{event.name}</Name>\n                            <DateTimeWrapper>\n                              <li>\n                                <Head>{t('Date')}</Head>\n                                <DateTime>\n                                  {new Date(event.date).toLocaleDateString()}\n                                </DateTime>\n                              </li>\n                              <li>\n                                <Head>{t('Heure')}</Head>\n                                <DateTime>{event.time}</DateTime>\n                              </li>\n                            </DateTimeWrapper>\n                            <Describe>\n                              {event.description.length > 50\n                                ? event.description.slice(0, 50) + ' ...'\n                                : event.description}\n                            </Describe>\n                            <BtnLink to={`/events/${event._id}`}>\n                              <span>{t('Suivant')}</span>\n                            </BtnLink>\n                          </DetailsWrapper>\n                        )}\n                      </EventListItem>\n                    );\n                  })}\n              </EventList>\n              <ViewportBox $mobile>\n                <Swiper\n                  modules={[Navigation, Mousewheel, Keyboard, Autoplay]}\n                  spaceBetween={50}\n                  slidesPerView={1}\n                  mousewheel={true}\n                  navigation={{\n                    prevEl: '.swiper-button-prev',\n                    nextEl: '.swiper-button-next',\n                  }}\n                  pagination={{ clickable: true }}\n                  keyboard={true}\n                  loop={true}\n                  loopPreventsSliding={true}\n                  loopedslides={1}\n                  autoplay={{ delay: 5000 }}\n                  effect={'creative'}\n                >\n                  {specialistEvents\n                    .filter(event => event.status === 'active')\n                    .sort((a, b) => new Date(b.date) - new Date(a.date))\n                    .slice(0, 5)\n                    .sort((a, b) => new Date(a.date) - new Date(b.date))\n                    .map((event, i) => {\n                      return (\n                        <SwiperSlide key={i}>\n                          <EventListItem\n                            onMouseEnter={() => handleMouseEnter(i)}\n                            onMouseLeave={handleMouseLeave}\n                            onTouchStart={() => handleMouseEnter(i)}\n                            // onTouchEnd={handleMouseLeave}\n                          >\n                            <ItemImg\n                              key={event._id}\n                              src={\n                                event.image\n                                  ? BASE_URL_IMG +\n                                    event.image.split('/')[\n                                      event.image.split('/').length - 1\n                                    ]\n                                  : defaultImg\n                              }\n                              alt={event.name}\n                              width=\"402\"\n                              height=\"366\"\n                              loading=\"lazy\"\n                            />\n                            {isHovered === i && (\n                              <DetailsWrapper>\n                                <Name>{event.name}</Name>\n                                <DateTimeWrapper>\n                                  <li>\n                                    <Head>{t('Date')}</Head>\n                                    <DateTime>\n                                      {new Date(\n                                        event.date\n                                      ).toLocaleDateString()}\n                                    </DateTime>\n                                  </li>\n                                  <li>\n                                    <Head>{t('Heure')}</Head>\n                                    <DateTime>{event.time}</DateTime>\n                                  </li>\n                                </DateTimeWrapper>\n                                <Describe>\n                                  {event.description.length > 50\n                                    ? event.description.slice(0, 50) + ' ...'\n                                    : event.description}\n                                </Describe>\n                                <BtnLink to={`/events/${event._id}`}>\n                                  <span>{t('Suivant')}</span>\n                                </BtnLink>\n                              </DetailsWrapper>\n                            )}\n                          </EventListItem>\n                        </SwiperSlide>\n                      );\n                    })}\n                </Swiper>\n                {specialistEvents.length > 1 && (\n                  <Pagination>\n                    <BtnPagination className=\"swiper-button-prev\">\n                      <MdKeyboardArrowLeft size={30} className=\"buttonSlide\" />\n                    </BtnPagination>\n                    <BtnPagination className=\"swiper-button-next\">\n                      <MdKeyboardArrowRight size={30} className=\"buttonSlide\" />\n                    </BtnPagination>\n                  </Pagination>\n                )}\n              </ViewportBox>\n            </>\n          )}\n        {specialistEvents.filter(event => event.status === 'active').length >\n          3 &&\n          !error && (\n            <>\n              <SViewportBox>\n                <Swiper\n                  modules={[Navigation, Mousewheel, Keyboard, Autoplay]}\n                  spaceBetween={50}\n                  slidesPerView={3}\n                  mousewheel={true}\n                  navigation={{\n                    prevEl: '.swiper-button-prev',\n                    nextEl: '.swiper-button-next',\n                  }}\n                  pagination={{ clickable: true }}\n                  keyboard={true}\n                  loop={true}\n                  loopPreventsSliding={true}\n                  loopedslides={1}\n                >\n                  {specialistEvents\n                    .filter(event => event.status === 'active')\n                    .sort((a, b) => new Date(b.date) - new Date(a.date))\n                    .slice(0, 5)\n                    .sort((a, b) => new Date(a.date) - new Date(b.date))\n                    .map((event, i) => {\n                      return (\n                        <SwiperSlide key={i}>\n                          <EventListItem\n                            onMouseEnter={() => handleMouseEnter(i)}\n                            onMouseLeave={handleMouseLeave}\n                            onTouchStart={() => handleMouseEnter(i)}\n                            // onTouchEnd={handleMouseLeave}\n                          >\n                            <ItemImg\n                              key={event._id}\n                              src={\n                                event.image\n                                  ? BASE_URL_IMG +\n                                    event.image.split('/')[\n                                      event.image.split('/').length - 1\n                                    ]\n                                  : defaultImg\n                              }\n                              alt={event.name}\n                              width=\"402\"\n                              height=\"366\"\n                              loading=\"lazy\"\n                            />\n                            {isHovered === i && (\n                              <DetailsWrapper>\n                                <Name>{event.name}</Name>\n                                <DateTimeWrapper>\n                                  <li>\n                                    <Head>{t('Date')}</Head>\n                                    <DateTime>\n                                      {new Date(\n                                        event.date\n                                      ).toLocaleDateString()}\n                                    </DateTime>\n                                  </li>\n                                  <li>\n                                    <Head>{t('Heure')}</Head>\n                                    <DateTime>{event.time}</DateTime>\n                                  </li>\n                                </DateTimeWrapper>\n                                <Describe>\n                                  {event.description.length > 50\n                                    ? event.description.slice(0, 50) + ' ...'\n                                    : event.description}\n                                </Describe>\n                                <BtnLink to={`/events/${event._id}`}>\n                                  <span>{t('Suivant')}</span>\n                                </BtnLink>\n                              </DetailsWrapper>\n                            )}\n                          </EventListItem>\n                        </SwiperSlide>\n                      );\n                    })}\n                </Swiper>\n                {specialistEvents.length > 3 && (\n                  <Pagination>\n                    <BtnPagination className=\"swiper-button-prev\">\n                      <MdKeyboardArrowLeft size={30} className=\"buttonSlide\" />\n                    </BtnPagination>\n                    <BtnPagination className=\"swiper-button-next\">\n                      <MdKeyboardArrowRight size={30} className=\"buttonSlide\" />\n                    </BtnPagination>\n                  </Pagination>\n                )}\n              </SViewportBox>\n              <ViewportBox $mobile>\n                <Swiper\n                  modules={[Navigation, Mousewheel, Keyboard, Autoplay]}\n                  spaceBetween={50}\n                  slidesPerView={1}\n                  mousewheel={true}\n                  navigation={{\n                    prevEl: '.swiper-button-prev',\n                    nextEl: '.swiper-button-next',\n                  }}\n                  pagination={{ clickable: true }}\n                  keyboard={true}\n                  loop={true}\n                  loopPreventsSliding={true}\n                  loopedslides={1}\n                  autoplay={{ delay: 5000 }}\n                  effect={'creative'}\n                >\n                  {specialistEvents\n                    .filter(event => event.status === 'active')\n                    .sort((a, b) => new Date(b.date) - new Date(a.date))\n                    .slice(0, 5)\n                    .sort((a, b) => new Date(a.date) - new Date(b.date))\n                    .map((event, i) => {\n                      return (\n                        <SwiperSlide key={i}>\n                          <EventListItem\n                            onMouseEnter={() => handleMouseEnter(i)}\n                            onMouseLeave={handleMouseLeave}\n                            onTouchStart={() => handleMouseEnter(i)}\n                            // onTouchEnd={handleMouseLeave}\n                          >\n                            <ItemImg\n                              key={event._id}\n                              src={\n                                event.image\n                                  ? BASE_URL_IMG +\n                                    event.image.split('/')[\n                                      event.image.split('/').length - 1\n                                    ]\n                                  : defaultImg\n                              }\n                              alt={event.name}\n                              width=\"402\"\n                              height=\"366\"\n                              loading=\"lazy\"\n                            />\n                            {isHovered === i && (\n                              <DetailsWrapper>\n                                <Name>{event.name}</Name>\n                                <DateTimeWrapper>\n                                  <li>\n                                    <Head>{t('Date')}</Head>\n                                    <DateTime>\n                                      {new Date(\n                                        event.date\n                                      ).toLocaleDateString()}\n                                    </DateTime>\n                                  </li>\n                                  <li>\n                                    <Head>{t('Heure')}</Head>\n                                    <DateTime>{event.time}</DateTime>\n                                  </li>\n                                </DateTimeWrapper>\n                                <Describe>\n                                  {event.description.length > 50\n                                    ? event.description.slice(0, 50) + ' ...'\n                                    : event.description}\n                                </Describe>\n                                <BtnLink to={`/events/${event._id}`}>\n                                  <span>{t('Suivant')}</span>\n                                </BtnLink>\n                              </DetailsWrapper>\n                            )}\n                          </EventListItem>\n                        </SwiperSlide>\n                      );\n                    })}\n                </Swiper>\n                {specialistEvents.length > 1 && (\n                  <Pagination>\n                    <BtnPagination className=\"swiper-button-prev\">\n                      <MdKeyboardArrowLeft size={30} className=\"buttonSlide\" />\n                    </BtnPagination>\n                    <BtnPagination className=\"swiper-button-next\">\n                      <MdKeyboardArrowRight size={30} className=\"buttonSlide\" />\n                    </BtnPagination>\n                  </Pagination>\n                )}\n              </ViewportBox>\n            </>\n          )}\n      </EventsSection>\n      <MessageSection>\n        <Title>{t('Vous avez des question à un expert?')}</Title>\n        <FormMessage specialist={specialist} />\n      </MessageSection>\n    </Container>\n  );\n};\n\nSpecialist.propTypes = {\n  specialist: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    specialistId: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n    status: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    description: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n","import { useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { SEO } from 'utils/SEO';\nimport { fetchData } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'helpers/Loader/Loader';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { Specialist } from 'components/Specialist/Specialist';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\n\nconst SpecialistPage = () => {\n  const [specialist, setSpecialist] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const routeParams = useParams();\n  const { t } = useTranslation();\n  const { selectedLanguage } = useContext(StatusContext);\n  // const [lang, setLang] = useState(getFromStorage('chosenLanguage') || 'fr');\n\n  useEffect(() => {\n    async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/specialists/${routeParams.id}`);\n        const langData = [\n          {\n            _id: data._id,\n            specialistId: data.specialistId,\n            status: data.status,\n            phone: data.phone,\n            email: data.email,\n            ...data[selectedLanguage],\n            // ...data[lang],\n            rating: data.rating,\n            image: data.image,\n          },\n        ];\n        setSpecialist(langData[0]);\n        if (!data) {\n          return onFetchError(t('Whoops, something went wrong'));\n        }\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    if (routeParams.id !== '' && routeParams !== undefined) {\n      getData();\n    }\n  }, [routeParams.id, t]);\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Specialist\" description=\"Specialist profile\" />\n      {isLoading ? onLoading() : onLoaded()}\n      {error && onFetchError(t('Whoops, something went wrong'))}\n      {Object.keys(specialist).length > 0 && !error && (\n        <Specialist specialist={specialist} />\n      )}\n    </>\n  );\n};\n\nexport default SpecialistPage;\n"],"names":["FormList","styled","Form","_templateObject","_taggedTemplateLiteral","theme","FieldsWrapper","_templateObject2","FormLabel","_templateObject3","FormName","_templateObject4","FormInput","Field","_templateObject5","Error","_templateObject6","FormBtn","BtnAccent","_templateObject7","LableBoxMes","_templateObject8","FormInputMessage","_templateObject9","FormMessage","_ref","specialist","error","setError","useState","isLoading","setIsLoading","t","useTranslation","dispatch","useDispatch","MessageSchema","Yup","shape","name","min","max","required","email","message","_jsx","Formik","initialValues","specialistId","onSubmit","values","_ref2","setSubmitting","resetForm","async","data","createData","addMessages","onFetchError","createMessage","enableReinitialize","validationSchema","children","_ref3","handleChange","handleSubmit","setFieldValue","isSubmitting","errors","touched","_jsxs","autoComplete","onChange","htmlFor","type","id","placeholder","value","rows","cols","e","target","state","disabled","fadeInUp","keyframes","EventsSection","Section","BtnLinkText","NavLink","EventList","EventListItem","EventImgContainer","ViewportBox","props","$mobile","ItemImg","DetailsWrapper","Name","_templateObject10","DateTimeWrapper","_templateObject11","Head","_templateObject12","DateTime","_templateObject13","Describe","_templateObject14","Pagination","BtnPagination","TeamListItem","BtnLight","BtnLink","GoBack","Link","BackButton","to","HiArrowLeft","size","DescriptionSection","Image","SViewportBox","MessageSection","DescriptionWrapper","Specialist","image","description","descriptionArray","split","events","setEvents","activeEvents","setActiveEvents","specialistEvents","setSpecialistEvents","selectedLanguage","useContext","StatusContext","useEffect","fetchData","langData","filter","item","map","event","_id","article_event","language","image_1","image_2","rating","duration","category","push","array","it","eventId","language_secondary","language_third","price","date","time","location","address","status","seats","booking","vacancies","isHovered","setHovered","handleMouseEnter","i","handleMouseLeave","Container","src","BASE_URL_AVATAR","length","defaultImg","alt","width","height","loading","Headline","Subtitle","style","textAlign","textIndent","Title","onLoading","onLoaded","_Fragment","sort","a","b","Date","slice","onMouseEnter","onMouseLeave","onTouchStart","BASE_URL_IMG","toLocaleDateString","concat","Swiper","modules","Navigation","Mousewheel","Keyboard","Autoplay","spaceBetween","slidesPerView","mousewheel","navigation","prevEl","nextEl","pagination","clickable","keyboard","loop","loopPreventsSliding","loopedslides","autoplay","delay","effect","SwiperSlide","className","MdKeyboardArrowLeft","MdKeyboardArrowRight","SpecialistPage","setSpecialist","routeParams","useParams","undefined","phone","getData","window","scrollTo","top","left","behavior","SEO","title","Object","keys"],"sourceRoot":""}